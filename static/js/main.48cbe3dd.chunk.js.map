{"version":3,"sources":["components/Forms/Form.js","components/UserList/UserItem.js","components/UserList/UsersList.js","components/Section/Section.js","components/Forms/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","Form","state","handlerChange","target","value","setState","handlerSubmit","e","preventDefault","addContact","props","id","shortid","generate","reset","this","onSubmit","className","type","onChange","pattern","title","required","htmlFor","Component","UserItem","onClick","UserList","users","map","user","Section","children","Filter","filter","handleFilter","App","contacts","addContactToList","newContact","newContactName","toLowerCase","find","contact","alert","prevState","handleFilterContacts","filterValue","handlerDeleteUser","deleteItemId","prevProps","localStorage","setItem","JSON","stringify","contactList","parse","getItem","normalizedName","contactForRender","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48cbe3dd.chunk.js","sourcesContent":["import { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport './Forms.scss';\n\nconst INITIAL_STATE = { name: '', number: '' };\n\nclass Form extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handlerChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    addContact(newContact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { handlerChange, handlerSubmit } = this;\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={handlerSubmit} className=\"form\">\n        <div className=\"wrapper\">\n          <label className=\"label\">\n            Name\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              className=\"input\"\n              onChange={handlerChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label htmlFor=\"number\" className=\"label\">\n            Number\n            <input\n              id=\"number\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              className=\"input\"\n              onChange={handlerChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button type=\"submit\" className=\"btn\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport './User.scss';\n\nfunction UserItem({ id, name, number, onClick }) {\n  return (\n    <li className=\"item\">\n      <span>\n        {name}: {number}\n      </span>\n      <button id={id} type=\"button\" onClick={onClick} className=\"btn\">\n        Delete\n      </button>\n    </li>\n  );\n}\n\nUserItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default UserItem;\n","import UserItem from './UserItem';\nimport PropTypes from 'prop-types';\nimport './User.scss';\n\nfunction UserList({ users, onClick }) {\n  return (\n    <ul className=\"list\">\n      {users.map(user => (\n        <UserItem\n          key={user.id}\n          name={user.name}\n          number={user.number}\n          onClick={onClick}\n          id={user.id}\n        />\n      ))}\n    </ul>\n  );\n}\nUserList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n\nexport default UserList;\n","import PropTypes from 'prop-types';\nimport './Section.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <section className=\"section\">\n      {title && <h2 className=\"title\">{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import './Forms.scss';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ filter, handleFilter }) {\n  return (\n    <label htmlFor=\"filter\" className=\"label filterLabel\">\n      Find contacts by name\n      <input\n        id=\"filter\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n        className=\"input filterInput\"\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilter: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import './App.css';\nimport { Component } from 'react';\nimport Form from './components/Forms/Form';\nimport UserList from './components/UserList/UsersList';\nimport Section from './components/Section/Section';\nimport Filter from './components/Forms/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contactList = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contactList) {\n      this.setState({ contacts: contactList });\n    }\n  }\n\n  addContactToList = newContact => {\n    const newContactName = newContact.name.toLowerCase();\n    const doubleContact = this.state.contacts.find(contact => {\n      return contact.name.toLowerCase() === newContactName;\n    });\n    if (doubleContact) {\n      alert(`${newContact.name} is already in contact`);\n      return;\n    }\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  handleFilterContacts = e => {\n    const filterValue = e.target.value;\n    this.setState({ filter: filterValue });\n  };\n\n  handlerDeleteUser = ({ target }) => {\n    const deleteItemId = target.id;\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contact => contact.id !== deleteItemId,\n      ),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const { addContactToList, handleFilterContacts, handlerDeleteUser } = this;\n    const normalizedName = filter.toLowerCase();\n    const contactForRender = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedName),\n    );\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Section>\n          <Form addContact={addContactToList} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter filter={filter} handleFilter={handleFilterContacts} />\n          <UserList users={contactForRender} onClick={handlerDeleteUser} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}